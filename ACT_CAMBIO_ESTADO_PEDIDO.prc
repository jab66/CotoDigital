CREATE OR REPLACE PROCEDURE DSSADM.ACT_CAMBIO_ESTADO_PEDIDO (PFECHA DATE) IS

--DECLARE

--PFECHA DATE;

--START_DATE DATE := to_date('16/06/2021', 'DD/MM/YYYY');
--END_DATE   DATE := to_date('16/06/2021', 'DD/MM/YYYY');

--CD  NUMBER := 1;   --'CENTRO DISTRIBUCION';
--SUC NUMBER := 2;   --'SUCURSAL';
--ANT NUMBER := 3;   --'DESPACHOS DIAS ANTERIORES';

CURSOR C1 IS
SELECT  a.rowid clave, a.* FROM AG_PEDIDOS_COTODIGITAL a
WHERE   a.DIA_LOGISTICO = PFECHA AND
        a.PEDIDO_PERIODO = 1;
REG_C1 C1%ROWTYPE;

CURSOR C2 IS
SELECT  *
FROM    BT_ENV_VIAJ_DESPACHADOS A
WHERE   ID_DIA = PFECHA
    AND TIPO_OPERACION = 'ENTREGA'
    AND ESTADO IN ('CF', 'CR' , 'CS')
    AND A.ID_CANAL = 4;
REG_C2 C2%ROWTYPE;

CURSOR C3(VRESERVA NUMBER, VSUC NUMBER) IS
SELECT DISTINCT PEDIDO_ID, RESERVA_CODIGO, RESERVA_SUCURSAL
FROM rpt.RPT_RESERVA_SUCURSAL WHERE RESERVA_CODIGO = VRESERVA AND RESERVA_SUCURSAL = VSUC;
REG_C3 C3%ROWTYPE;

TYPE PEDIDOS_TYPE IS TABLE OF NUMBER
      INDEX BY PLS_INTEGER;
L_PEDIDOS PEDIDOS_TYPE;

TYPE PEDIDOS2_TYPE IS TABLE OF NUMBER
      INDEX BY PLS_INTEGER;
L_PEDIDOS2 PEDIDOS2_TYPE;

CLAVE VARCHAR2(18);
NUEVA_CLAVE VARCHAR2(18);

ENVIOS NUMBER := 0;
VIAJES NUMBER := 0;
PEDIDO_CON_ESTADO_96 NUMBER := 0;
PEDIDO_CON_ESTADO_70 NUMBER := 0;

V_PERIODO NUMBER :=0;

--VPEDIDO NUMBER := 0;
ULTIMO_ESTADO NUMBER := 0;
PDIA_PEDIDO DATE;
--TOTAL_REGISTROS NUMBER := 0;

-- funcion que determina si el pedido es del cd o sucursal
FUNCTION PEDIDO_CD (P_REG C1%ROWTYPE)
    RETURN NUMBER
IS

ENVIOS NUMBER := 0;
VSUC NUMBER := 0;
VRESERVA NUMBER := 0;
VESTADO NUMBER := 0;

BEGIN

    -- REGLA 1
    SELECT COUNT(DISTINCT RESERVA_CODIGO) INTO ENVIOS FROM RPT.RPT_RESERVA_SUCURSAL WHERE PEDIDO_ID = P_REG.ID_PEDIDO;

    -- REGLA 2
    IF P_REG.ID_SUC NOT IN (165,109,185,178,204,209) THEN
        VSUC := 1;
    ELSE
        VSUC := 0;
    END IF;

    -- REGLA 3
    IF P_REG.VENTA_RESERVA + P_REG.TIPO_RESERVA > 1 THEN
        VRESERVA := 1;
    ELSE
        VRESERVA := 0;
    END IF;

    -- REGLA 4
    IF P_REG.ID_ESTADO_PEDIDO IN (85,88,90,91,92,93,94,95,96,97,98,99,83) THEN
        VESTADO := 1;
    END IF;

    IF ENVIOS >= 1 AND VSUC = 1 AND VRESERVA = 1 AND VESTADO = 1 THEN
        RETURN 1;
    ELSE
        RETURN 0;
    END IF;

END;

BEGIN

--WHILE START_DATE <= TRUNC(END_DATE) LOOP

--    PFECHA := START_DATE;

    OPEN C1;
    LOOP FETCH C1 INTO REG_C1;
    EXIT WHEN C1%NOTFOUND;

        ENVIOS := 0;
        VIAJES := 0;
        PEDIDO_CON_ESTADO_96 := 0;

        -- Se carga el pedido en una matriz
        L_PEDIDOS(REG_C1.ID_PEDIDO):= REG_C1.ID_PEDIDO;

        IF PEDIDO_CD(REG_C1) = 1 THEN -- pedidos de centro de distribucion

                SELECT  COUNT(1) INTO VIAJES
                FROM    BT_ENV_VIAJ_DESPACHADOS
                WHERE   ID_CANAL = 4 AND
                        TIPO_OPERACION = 'ENTREGA' AND
                        ESTADO IN ('CF', 'CR' , 'CS') AND
                        ID_DIA = PFECHA AND
                        CODIGORESERVA IN (SELECT DISTINCT RESERVA_CODIGO FROM RPT.RPT_RESERVA_SUCURSAL WHERE PEDIDO_ID = REG_C1.ID_PEDIDO );

                IF VIAJES > 0 THEN
                    IF REG_C1.ID_ESTADO_PEDIDO <> 96 THEN
                        UPDATE AG_PEDIDOS_COTODIGITAL SET ID_ESTADO_PEDIDO = 96 WHERE ROWID = REG_C1.CLAVE;
                    END IF;
                END IF;

                IF VIAJES = 0 THEN
                    IF REG_C1.ID_ESTADO_PEDIDO <> 90 THEN
                        UPDATE AG_PEDIDOS_COTODIGITAL SET ID_ESTADO_PEDIDO = 90 WHERE ROWID = REG_C1.CLAVE;
                    END IF;
                END IF;

        END IF;


        IF PEDIDO_CD(REG_C1) = 0 THEN -- pedidos de sucursal

                PEDIDO_CON_ESTADO_96 := 0;
                PEDIDO_CON_ESTADO_70 := 0;

                /*
                * LOGICA DEL PEDIDO 999 
                */
                IF (REG_C1.ID_ESTADO_PEDIDO = 96) THEN

                    SELECT  COUNT(1) INTO PEDIDO_CON_ESTADO_96
                    FROM    AG_PEDIDOS_COTODIGITAL
                    WHERE   ID_PEDIDO = REG_C1.ID_PEDIDO
                        AND DIA_LOGISTICO < PFECHA
                        AND PEDIDO_PERIODO = 1
                        AND VENTA_RESERVA + TIPO_RESERVA <= 1
                        AND ID_ESTADO_PEDIDO = 96;

                END IF;

                IF PEDIDO_CON_ESTADO_96 > 0 THEN
                    UPDATE AG_PEDIDOS_COTODIGITAL SET ID_ESTADO_PEDIDO = 999 WHERE ROWID = REG_C1.CLAVE;
                END IF;



                /*
                * LOGICA DEL PEDIDO 990  
                */
                IF (REG_C1.ID_ESTADO_PEDIDO = 70 AND REG_C1.PEDIDO_PERIODO = 1) THEN

                    SELECT  COUNT(1) INTO PEDIDO_CON_ESTADO_70
                    FROM    AG_PEDIDOS_COTODIGITAL
                    WHERE   ID_PEDIDO = REG_C1.ID_PEDIDO
                        AND DIA_LOGISTICO < PFECHA
                        AND PEDIDO_PERIODO = 1
                        AND ID_ESTADO_PEDIDO = 96;

                END IF;

                IF PEDIDO_CON_ESTADO_70 > 0 THEN
                    UPDATE AG_PEDIDOS_COTODIGITAL SET ID_ESTADO_PEDIDO = 990 WHERE ROWID = REG_C1.CLAVE;
                END IF;


        END IF;


    END LOOP;
    CLOSE C1;


    -- SE LEEN LOS DESPACHOS POR DIA
    OPEN C2;
    LOOP FETCH C2 INTO REG_C2;
    EXIT WHEN C2%NOTFOUND;

        -- SE BUSCA EL ENVIO POR RESERVA PARA SABER CUAL ES EL PEDIDO
        OPEN C3(REG_C2.CODIGORESERVA, REG_C2.ID_SUC);
        LOOP FETCH C3 INTO REG_C3;
        EXIT WHEN C3%NOTFOUND;

            -- VERIFICAR SI EL PEDIDO FUE PROCESADO EN EL DIA
            IF L_PEDIDOS.EXISTS(REG_C3.PEDIDO_ID) = FALSE THEN


                -- ESTO SE HACE PARA NO PROCESAR PEDIDOS REPETIDOS
                -- pueden existir mas de un pedido porque pueden tener mas de un codigo de reserva
                IF L_PEDIDOS2.EXISTS(REG_C3.PEDIDO_ID) = FALSE THEN

                    L_PEDIDOS2(REG_C3.PEDIDO_ID):= REG_C3.PEDIDO_ID;

                    SELECT ID_ESTADO_PEDIDO, DIA_LOGISTICO, ROWID CLAVE INTO ULTIMO_ESTADO, PDIA_PEDIDO, CLAVE FROM AG_PEDIDOS_COTODIGITAL
                    WHERE ID_PEDIDO = REG_C3.PEDIDO_ID
                    AND DIA_LOGISTICO = (SELECT MAX(DIA_LOGISTICO) FROM AG_PEDIDOS_COTODIGITAL 
                                            WHERE ID_PEDIDO = REG_C3.PEDIDO_ID AND PEDIDO_PERIODO != 4);

--                    DBMS_OUTPUT.PUT_LINE(REG_C2.CODIGORESERVA||';'||CLAVE||';'||REG_C3.PEDIDO_ID||';'||ULTIMO_ESTADO||';'||REG_C2.ID_SUC||';'||'96'||';'||PFECHA||';'||ANT);

                    INSERT INTO AG_PEDIDOS_COTODIGITAL (SELECT * FROM AG_PEDIDOS_COTODIGITAL WHERE ROWID = CLAVE);

                    SELECT ROWID CLAVE INTO NUEVA_CLAVE FROM AG_PEDIDOS_COTODIGITAL
                    WHERE ID_PEDIDO = REG_C3.PEDIDO_ID AND ROWID <> CLAVE
                    AND DIA_LOGISTICO = (SELECT MAX(DIA_LOGISTICO) FROM AG_PEDIDOS_COTODIGITAL 
                                         WHERE ID_PEDIDO = REG_C3.PEDIDO_ID AND PEDIDO_PERIODO != 4);

                    SELECT PEDIDO_PERIODO INTO V_PERIODO FROM AG_PEDIDOS_COTODIGITAL WHERE ROWID = NUEVA_CLAVE;
                    ACT_LOG_PEDIDO_PERIODO(PFECHA, REG_C3.PEDIDO_ID, 1, V_PERIODO, 'ACT_CAMBIO_ESTADO_PEDIDO');

                    UPDATE AG_PEDIDOS_COTODIGITAL A SET A.FECHA_ENTREGA = PFECHA, A.ID_ESTADO_PEDIDO = 96, A.PEDIDO_PERIODO = 1, A.DIA_LOGISTICO = PFECHA
                        WHERE ROWID = NUEVA_CLAVE;

                END  IF;

            END IF;

        END LOOP;
        CLOSE C3;

    END LOOP;
    CLOSE C2;


--   START_DATE := START_DATE + 1;
--end loop;

COMMIT;

END;
/